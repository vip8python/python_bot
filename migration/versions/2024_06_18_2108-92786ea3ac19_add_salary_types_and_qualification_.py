"""add salary types and qualification employee

Revision ID: 92786ea3ac19
Revises: 720adcb6330f
Create Date: 2024-06-18 21:08:30.715734

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '92786ea3ac19'
down_revision: Union[str, None] = '720adcb6330f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('salary_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_qualification_employee',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('qualification_id', sa.Integer(), nullable=True),
    sa.Column('employees_count', sa.Integer(), nullable=False),
    sa.Column('salary_types_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['qualification_id'], ['qualifications.id'], ),
    sa.ForeignKeyConstraint(['salary_types_id'], ['salary_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('salaries')
    op.drop_table('project_employees')
    op.drop_table('project_qualification_employees')
    op.drop_table('salary_amounts')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('salary_amounts',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('salary_amounts_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='salary_amounts_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('project_qualification_employees',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('qualification_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('employees_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('salary_amount_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_qualification_employees_project_id_fkey'),
    sa.ForeignKeyConstraint(['qualification_id'], ['qualifications.id'], name='project_qualification_employees_qualification_id_fkey'),
    sa.ForeignKeyConstraint(['salary_amount_id'], ['salary_amounts.id'], name='project_qualification_employees_salary_amount_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='project_qualification_employees_pkey')
    )
    op.create_table('project_employees',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('employees_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('qualification_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_employees_project_id_fkey'),
    sa.ForeignKeyConstraint(['qualification_id'], ['qualifications.id'], name='project_employees_qualification_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='project_employees_pkey')
    )
    op.create_table('salaries',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='salaries_pkey')
    )
    op.drop_table('project_qualification_employee')
    op.drop_table('salary_types')
    # ### end Alembic commands ###
